import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import mean_squared_error, r2_score
from google.colab import files
import io
uploaded = files.upload()
data = pd.read_csv(io.BytesIO(next(iter(uploaded.values()))))
X = data[['fixed acidity','volatile acidity','citric acid','residual sugar','chlorides',
          'free sulfur dioxide','total sulfur dioxide','density','pH','sulphates','alcohol']]
y = data['quality']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
estimators = [10, 50, 100, 200, 500]
train_scores = []
test_scores = []
for n in estimators:
    model = RandomForestRegressor(n_estimators=n, random_state=42)
    model.fit(X_train, y_train)
    y_train_pred = model.predict(X_train)
    y_test_pred = model.predict(X_test)
    train_r2 = r2_score(y_train, y_train_pred)
    test_r2 = r2_score(y_test, y_test_pred)
    train_scores.append(train_r2)
    test_scores.append(test_r2)
    print(f"n_estimators={n} → Train R2: {train_r2:.3f}, Test R2: {test_r2:.3f}")
plt.figure(figsize=(8,5))
plt.plot(estimators, train_scores, marker='o', label='Train R²')
plt.plot(estimators, test_scores, marker='o', label='Test R²')
plt.xlabel("Number of Trees (Model Complexity)")
plt.ylabel("R² Score")
plt.title("Overfitting Verification in Random Forest")
plt.legend()
plt.grid(True)
plt.show()
